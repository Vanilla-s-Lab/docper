name: Flutter Build
on: [ push ]

jobs:
  Flutter-Build:
    # https://docs.github.com/cn/actions/reference/workflow-syntax-for-github-actions
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - name: Setup flutter
        uses: subosito/flutter-action@master
        with:
          channel: 'stable'

      - name: Flutter config enable desktop
        run: flutter config --enable-linux-desktop --enable-macos-desktop --enable-windows-desktop

      - name: Check out Vanilla-s-Lab/docper
        uses: actions/checkout@master

      - name: Linux - Setup CMake
        uses: jwlawson/actions-setup-cmake@master
        # https://www.edwardthomson.com/blog/github_actions_14_conditionals_with_a_matrix.html
        if: matrix.os == 'ubuntu-latest'

      - name: Linux - Install additional packages
        # https://github.com/flutter/flutter/issues/59750
        run: sudo apt update && sudo apt install clang ninja-build libgtk-3-dev -y
        if: matrix.os == 'ubuntu-latest'

      - name: Linux - Build & Compress
        # https://www.cyberciti.biz/faq/how-to-create-tar-gz-file-in-linux-using-command-line/
        run: flutter build linux && cd ./build/linux/x64/release/ && tar -czvf linux-bundle.tar.gz bundle/
        if: matrix.os == 'ubuntu-latest'

      - name: macOS - Build & Compress
        run: flutter build macos && cd ./build/macos/Build/Products/ && zip macOS-Release.zip Release/*
        if: matrix.os == 'macos-latest'

      - name: Windows - Build & Compress
        # https://superuser.com/questions/201371/create-zip-folder-from-the-command-line-windows
        run: flutter build windows && cd .\build\windows\runner\ && Compress-Archive Release\ Windows-Release.zip
        if: matrix.os == 'windows-latest'
